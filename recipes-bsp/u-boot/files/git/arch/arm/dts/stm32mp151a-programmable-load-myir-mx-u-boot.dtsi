/* SPDX-License-Identifier: GPL-2.0+ OR BSD-3-Clause*/
/*
 * Copyright (C) 2022, STMicroelectronics - All Rights Reserved
 * Author: STM32CubeMX code generation for STMicroelectronics.
 */

/* For more information on Device Tree configuration, please refer to
 * https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
 */

#include <dt-bindings/clock/stm32mp1-clksrc.h>

#include "stm32mp15-u-boot.dtsi"

#include "stm32mp15-mx.dtsi"
#include "stm32mp15-ddr.dtsi"

/* USER CODE BEGIN includes */
/* USER CODE END includes */

/ {

    /* USER CODE BEGIN root */
    config {
        u-boot,mmc-env-partition = "ssbl";
        u-boot,error-led = "error";
    };
    /*
    aliases {
        mmc0 = &sdmmc2;
        usb0 = &usbotg_hs;
    };*/
    led {
        u-boot,dm-pre-reloc;
        u-boot,dm-spl;
        // bicolor status LED
        status {
            u-boot,dm-pre-reloc;
            u-boot,dm-spl;
            label = "error";
            gpios = <&gpioz 6 GPIO_ACTIVE_LOW>;
            default-state = "off";
            status = "okay";
        };
    };
    /* USER CODE END root */

    clocks {
        /* USER CODE BEGIN clocks */
        u-boot,dm-pre-reloc;
        u-boot,dm-spl;
        /* USER CODE END clocks */

        clk_lsi: clk-lsi {

            /* USER CODE BEGIN clk_lsi */
            u-boot,dm-pre-reloc;
            u-boot,dm-spl;
            /* USER CODE END clk_lsi */
        };
        clk_hsi: clk-hsi {

            /* USER CODE BEGIN clk_hsi */
            u-boot,dm-pre-reloc;
            u-boot,dm-spl;
            /* USER CODE END clk_hsi */
        };
        clk_csi: clk-csi {
            /* USER CODE BEGIN clk_csi */
            u-boot,dm-pre-reloc;
            u-boot,dm-spl;
            /* USER CODE END clk_csi */
        };
        clk_lse: clk-lse {
            st,css;

            /* USER CODE BEGIN clk_lse */
            u-boot,dm-pre-reloc;
            u-boot,dm-spl;
            st,css;
            st,drive = <LSEDRV_MEDIUM_HIGH>;
            clock-frequency = <32768>;
            /* USER CODE END clk_lse */
        };
        clk_hse: clk-hse {
            st,css;

            /* USER CODE BEGIN clk_hse */
            st,digbypass;
            u-boot,dm-spl;
            /* USER CODE END clk_hse */
        };
    };

}; /*root*/

&rcc{
        u-boot,dm-spl;
	u-boot,dm-pre-reloc;
	st,clksrc = <
		CLK_MPU_PLL1P
		CLK_AXI_PLL2P
		CLK_MCU_PLL3P
		CLK_PLL12_HSE
		CLK_PLL3_HSE
		CLK_PLL4_HSE
		CLK_RTC_LSE
		CLK_MCO1_DISABLED
		CLK_MCO2_DISABLED
	>;
	st,clkdiv = <
		1 		/*MPU*/
		0 		/*AXI*/
		0 		/*MCU*/
		1 		/*APB1*/
		1 		/*APB2*/
		1 		/*APB3*/
		1 		/*APB4*/
		2 		/*APB5*/
		23 		/*RTC*/
		0 		/*MCO1*/
		0 		/*MCO2*/
	>;
	st,pkcs = <
		CLK_CKPER_HSE
		CLK_ETH_PLL4P
	        CLK_SDMMC12_PLL3R
		CLK_STGEN_HSE
		CLK_USBPHY_HSE
		CLK_SPI2S1_DISABLED
		CLK_SPI2S23_PLL4P
		CLK_SPI45_PCLK2
		CLK_SPI6_DISABLED
		CLK_I2C46_HSI
		CLK_SDMMC3_DISABLED
		CLK_USBO_USBPHY
		CLK_ADC_DISABLED
		CLK_CEC_DISABLED
		CLK_I2C12_HSI
		CLK_I2C35_DISABLED
		CLK_UART1_DISABLED
		CLK_UART24_HSI
		CLK_UART35_HSI
		CLK_UART6_DISABLED
		CLK_UART78_DISABLED
		CLK_SPDIF_DISABLED
		CLK_SAI1_DISABLED
		CLK_SAI2_DISABLED
		CLK_SAI3_DISABLED
		CLK_SAI4_DISABLED
		CLK_RNG1_PLL4R
		CLK_RNG2_PLL4R
		CLK_LPTIM1_DISABLED
		CLK_LPTIM23_DISABLED
		CLK_LPTIM45_DISABLED
	>;


	//pll2:st,pll@1 {
	st,pll@1 {
		u-boot,dm-pre-reloc;
                u-boot,dm-spl;
	};
	//pll3:st,pll@2 {
	st,pll@2 {
		u-boot,dm-pre-reloc;
                u-boot,dm-spl;
	};
	//pll4:st,pll@3 {
	st,pll@3 {
		u-boot,dm-pre-reloc;
                u-boot,dm-spl;
	};
	/* USER CODE BEGIN rcc */
	/* USER CODE END rcc */
};

&vreg_5v {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;
};
&vreg_3v3 {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;
};

&pinctrl {
    u-boot,dm-spl;
};


/*
 * This interface isn't actually used; we just define it here so that U-boot will work. Since their
 * driver model cannot support "holes" in device numbers, and the eMMC is on device 1â€¦ yeah.
 */
&sdmmc1{
    u-boot,dm-pre-reloc;
    u-boot,dm-spl;
    status = "okay";
    disable-wp;
    st,neg-edge;
    bus-width = <4>;
    vmmc-supply = <&vdd>;
};

&sdmmc2{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN sdmmc2 */
        u-boot,dm-spl;
	/* USER CODE END sdmmc2 */
};

&uart4{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN uart4 */
        u-boot,dm-spl;
	/* USER CODE END uart4 */
};

&uart4_pins_mx {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;

    pins1 {
        u-boot,dm-spl;
        u-boot,dm-pre-reloc;
        // avoid floating uart rx input
        bias-pull-up;
    };
    pins2 {
        u-boot,dm-spl;
        u-boot,dm-pre-reloc;
    };
};

&usbotg_hs{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN usbotg_hs */
        // force it into device mode
        u-boot,force-b-session-valid;
	/* USER CODE END usbotg_hs */
};

&usbphyc{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN usbphyc */
	/* USER CODE END usbphyc */
};

&usbphyc_port0{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN usbphyc_port0 */
	/* USER CODE END usbphyc_port0 */
};

&usbphyc_port1{
	u-boot,dm-pre-reloc;

	/* USER CODE BEGIN usbphyc_port1 */
	/* USER CODE END usbphyc_port1 */
};

/* USER CODE BEGIN addons */
// MXCube generated SDMMC pinout
&sdmmc2_pins_mx {
    u-boot,dm-spl;
    pins1 {
        u-boot,dm-spl;
    };
    pins2 {
        u-boot,dm-spl;
    };
};
&sdmmc2_opendrain_pins_mx {
    u-boot,dm-spl;
    pins1 {
        u-boot,dm-spl;
    };
    pins2 {
        u-boot,dm-spl;
    };
    pins3 {
        u-boot,dm-spl;
    };
};
&sdmmc2_sleep_pins_mx {
    u-boot,dm-spl;
    pins {
        u-boot,dm-spl;
    };

};

&i2c4_pins_z_mx {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;
    pins {
        u-boot,dm-spl;
        u-boot,dm-pre-reloc;
    };
};

&exti {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;
};

// i2c bus for auxiliary stuff
&i2c2 {
    u-boot,dm-pre-reloc;

    i2c-switch@70 {
        u-boot,dm-pre-reloc;
        i2c@0 {
            u-boot,dm-pre-reloc;
        };
        i2c@1 {
            u-boot,dm-pre-reloc;

            // config and MAC address EEPROM
            eeprom-conf@50 {
                u-boot,dm-pre-reloc;
            };
            eeprom-eui@58 {
                u-boot,dm-pre-reloc;
            };
        };
    };
};

// i2c bus for pmic
&i2c4 {
    u-boot,dm-spl;
    u-boot,dm-pre-reloc;

    stpmic@33 {
        u-boot,dm-spl;
        u-boot,dm-pre-reloc;

        regulators {
            u-boot,dm-spl;
            u-boot,dm-pre-reloc;

            buck1 { // Vcore
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            buck2 { // DDR
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            buck3 { // eMMC
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            buck4 { // eMMC
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            ldo1 { // analog reference
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            ldo4 { // USB PHYs
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            vref_ddr {
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            boost {
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            pwr_sw1 {
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
            pwr_sw2 {
                u-boot,dm-spl;
                u-boot,dm-pre-reloc;
            };
        };
    };
};
/* USER CODE END addons */

