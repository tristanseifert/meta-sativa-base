# Distribution for programmable load
DISTRO = "sativa"
DISTRO_NAME = "Sativa"
DISTRO_VERSION = "0.9"
DISTRO_CODENAME = "blunt"

SDK_VENDOR = "-sativasdk"
SDK_VERSION = "${@d.getVar('DISTRO_VERSION').replace('snapshot-${METADATA_REVISION}', 'snapshot')}"
SDK_VERSION[vardepvalue] = "${SDK_VERSION}"

MAINTAINER = "TBD <nobody@example.com>"

TARGET_VENDOR = "-sativa"

LOCALCONF_VERSION = "2"

DISTRO_FEATURES ?= "${DISTRO_FEATURES_DEFAULT}"

# Use systemd as init system
VIRTUAL-RUNTIME_init_manager = "systemd"
DISTRO_FEATURES_BACKFILL_CONSIDERED = "sysvinit"
VIRTUAL-RUNTIME_initscripts = ""

DISTRO_FEATURES:append = " systemd"
INIT_MANAGER = "systemd"

# use the systemd hardware watchdog kicking
IMAGE_INSTALL:append = " pl-systemd-watchdog"

# add some tools
# f2fs-tools: Support fsck, formatting f2fs partitions (used for user data)
# gptfdisk: Disk partitioning
# util-linux: Force re-reading partition tables
IMAGE_INSTALL:append = " dbus f2fs-tools gptfdisk util-linux "

# add some libraries most everything will depend on
IMAGE_INSTALL:append = " bzip2 libevent libevdev sqlite3"
# hardware IO libraries
IMAGE_INSTALL:append = " libgpiod libusbgx "
# hardware IO tools
IMAGE_INSTALL:append = " libgpiod-tools i2c-tools mmc-utils beep "

# support for framebuffers
# libdrm: Accessing the DRM video drivers' API
# fbset + fbset-modes: utility to change video modes (plus mode database)
IMAGE_INSTALL:append = " libdrm libdrm-kms fbset fbset-modes"

# bonus development tools
IMAGE_INSTALL:append = " systemd-analyze"

# fonts for GUI
# TODO: pare down which ones we'll actually use
# gentium: serif-y
# liberation: font family (sans, sans narrow, serif, mono)
# inconsolata: monospaced font
# dinish: DIN-style font
IMAGE_INSTALL:append = " \
    ttf-gentium \
    ttf-liberation-sans ttf-liberation-sans-narrow ttf-liberation-serif ttf-liberation-mono \
    ttf-inconsolata \
    ttf-dinish \
"

# UI libraries
# cairo: generic graphics library
# freetype: TTF rendering
# harfbuzz: Text shaping engine
# pango: Text rendering engine
# libjpeg-turbo: JPEG decoder
# libpng: PNG decoder
IMAGE_INSTALL:append = " \
    cairo freetype harfbuzz pango \
    libjpeg-turbo libpng \
"

# remove a bunch of unneeded stuff/features
DISTRO_FEATURES:remove = " \
    wayland \
    irda \
    ppp \
    pcmcia \
    smbfs \
    pci \
    3g \
    nfc \
    efi \
    ntfs \
    wifi \
    bluetooth \
    opengl \
    vulkan \
    cramfs \
    alsa \
    x11 \
    polkit \
"

# include SSH server
EXTRA_IMAGE_FEATURES += " ssh-server-dropbear"

# Use the 5.15.x series kernel
PREFERRED_VERSION_linux-yocto ?= "5.15%"
PREFERRED_VERSION_linux-yocto-rt ?= "5.15%"

# paths
SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
SDKPATHINSTALL = "/opt/${DISTRO}/${SDK_VERSION}"

# suggested bonus packages
DISTRO_EXTRA_RDEPENDS += " packagegroup-core-boot"
DISTRO_EXTRA_RRECOMMENDS += " kernel-module-af-packet"

TCLIBCAPPEND = ""

# use .rpm packages by default
PACKAGE_CLASSES ?= "package_rpm"

require conf/distro/include/no-static-libs.inc
require conf/distro/include/yocto-uninative.inc
require conf/distro/include/security_flags.inc
INHERIT += "uninative"

BB_SIGNATURE_HANDLER ?= "OEEquivHash"
BB_HASHSERVE ??= "auto"
